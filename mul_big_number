SYSCALL = 0x80
SYSEXIT = 1
EXIT_SUCCESS = 0

.section .data
  liczba1:
    .long 0x12345678, 0x52740281
    liczba1_len  = . - liczba1
  liczba2:
    .long 0x12211121, 0x21213211
    liczba2_len  = . - liczba2
.section .bss
  .lcomm hex_base, 4
  .lcomm carry, 4
  .lcomm number_of_doubles, 4
  .lcomm part_number1, 4
  .lcomm part_number2, 4

.section .text
.global _start
_start:
  movl $16, hex_base
  movl $0, carry

#get number of doubles
  movl $0, %edx
  movl $0, %ecx
  movl $liczba1_len, %eax
  movl $8, %ecx
  divl %ecx
  movl %eax, number_of_doubles 

#read parts of numbers
  movl $0, %eax
  movl $0, %ebx
  movl number_of_doubles, %edi
READ_PARTS:
  movl $0, %esi
  cmp $0, %edi
  jl END 
  movl liczba1(,%edi,4), %eax
  movl liczba2(,%edi,4), %ebx
  movl %eax, part_number1
  movl %ebx, part_number2
  jmp GET_NUMBERS_FOR_OPERATIONS

GET_NUMBERS_FOR_OPERATIONS:
#pobranie po 2 liczby
FOR1:
  movl $0, %eax
  movl $0, %ebx
  cmp $4, %esi
  jae END_FOR1

  movb part_number1(,%esi,1), %al
  movb part_number2(,%esi,1), %bl

GET_LOWER:
  salb $4, %al
  salb $4, %bl
  sarl $4, %eax
  sarl $4, %ebx

MUL_LOWER:
  movzx %al, %eax
  movzx %bl, %ebx
  mull %ebx
  addl carry, %eax
  cmp $15, %eax
  ja MAX_LOWER
  movl $0, carry
  pushq %rax
 
GET_UPPER:
  movl $0, %ecx
  movl $0, %eax
  movl $0, %edx

  movb part_number1(,%esi,1), %al
  movb part_number2(,%esi,1), %bl

  divl hex_base
  movzx %al, %eax
  movl %eax, %ecx
  movl $0, %eax
  movl $0, %edx
  movzx %bl, %ebx
  movl %ebx, %eax
  divl hex_base
  movzx %al, %eax
  movl %ecx, %ebx

  xchg %ebx, %eax  
  mull %ebx
  addl carry, %eax
  cmp $16, %eax
  ja MAX_UPPER
  pushq %rax
  movl $0, carry
  inc %esi
  jmp FOR1

MAX_LOWER:
  movl $0, %edx
  divl hex_base
  movl %eax, carry
  pushq %rdx
  jmp GET_UPPER 

MAX_UPPER:
  movl $0, %edx
  divl hex_base
  movl %eax, carry
  pushq %rdx
  inc %esi
  jmp FOR1 
  
END_FOR1:
  dec %edi
  jmp READ_PARTS 

END:
  cmp $0, carry
  ja ADD_LAST_CARRY
  jmp END_PROGRAM

ADD_LAST_CARRY:
  movl carry, %eax
  pushq %rax
  jmp END_PROGRAM

END_PROGRAM:
  movl $SYSEXIT, %eax
  movl $EXIT_SUCCESS, %ebx
  int $SYSCALL
